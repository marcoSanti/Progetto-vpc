MODULE main
VAR
    turno: {p, q};
    proc_p: process proc(p, turno);
    proc_q: process proc(q, turno);
ASSIGN
    init(turno) := p;


--template del mio processo in nusmv

MODULE proc(identita, turno)
VAR
    stato : {l1, l2, l3, l4}; --l1 come per dire linea 1 del codice originale
ASSIGN
    init(stato) := l1;
    next(stato) :=
        case
            stato = l1: {l1, l2}; --scelta non deterministica per o rimanere non in sezione critica oppure se procedere a fare richiesta per entrarci
            stato = l2: case
                            turno = identita: l3;
                            TRUE: stato;
                        esac;
            stato = l3: l4;
            stato = l4: l1;
            TRUE: stato;
        esac;

    next(turno):=
                case --qua vado a vedere in modo esplicito che tipo di turno ho e lo vado a cambiare!
                    stato = l4 & turno = identita & identita = p: p;
                    stato = l4 & turno = identita & identita = q: q;
                    TRUE: turno;
                esac;
FAIRNESS running; --verifico assenza di starvation individuale
SPEC AG(stato=l2 -> AF stato=l3); --assenza di deadlock (ovvero se faccio richeista prima o poi nel futuro entro )
SPEC AG(stato=l3 -> !((identita=p & turno=q) | (identita=q & turno=p)) ); --mutua esclusione
